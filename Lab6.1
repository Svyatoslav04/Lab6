abstract class Vehicle
{
    public double Speed { get; set; }
    public int Capacity { get; set; }

    public abstract void Move();
}

class Human
{
    public double Speed { get; set; }

    public void Move()
    {
        Console.WriteLine("Human is moving.");
    }
}

class Car : Vehicle
{
    public Car()
    {
        Speed = 100;
        Capacity = 5;
    }

    public override void Move()
    {
        Console.WriteLine("Car is moving.");
    }
}

class Bus : Vehicle
{
    public Bus()
    {
        Speed = 60;
        Capacity = 40;
    }

    public override void Move()
    {
        Console.WriteLine("Bus is moving.");
    }
}

class Train : Vehicle
{
    public Train()
    {
        Speed = 120;
        Capacity = 200;
    }

    public override void Move()
    {
        Console.WriteLine("Train is moving.");
    }
}

class TransportNetwork
{
    public List<Vehicle> Vehicles { get; set; }

    public TransportNetwork()
    {
        Vehicles = new List<Vehicle>();
    }

    public void AddVehicle(Vehicle vehicle)
    {
        Vehicles.Add(vehicle);
    }
}

class Route
{
    public string StartPoint { get; set; }
    public string EndPoint { get; set; }
}

class Program
{
    static void Main()
    {
        TransportNetwork network = new TransportNetwork();
        network.AddVehicle(new Car());
        network.AddVehicle(new Bus());
        network.AddVehicle(new Train());

        foreach (var vehicle in network.Vehicles)
        {
            vehicle.Move();
        }
    }
}
