using System;
using System.Collections.Generic;

abstract class GraphicPrimitive
{
    public int X { get; set; }
    public int Y { get; set; }

    public abstract void Draw();
    public abstract void Move(int x, int y);
}

class Circle : GraphicPrimitive
{
    public int Radius { get; set; }

    public override void Draw()
    {
        Console.WriteLine($"Draw circle at ({X}, {Y}) with radius {Radius}");
    }

    public override void Move(int x, int y)
    {
        X += x;
        Y += y;
    }
}

class Rectangle : GraphicPrimitive
{
    public int Width { get; set; }
    public int Height { get; set; }

    public override void Draw()
    {
        Console.WriteLine($"Draw rectangle at ({X}, {Y}) with width {Width} and height {Height}");
    }

    public override void Move(int x, int y)
    {
        X += x;
        Y += y;
    }
}

class Triangle : GraphicPrimitive
{
    public override void Draw()
    {
        Console.WriteLine($"Draw triangle at ({X}, {Y})");
    }

    public override void Move(int x, int y)
    {
        X += x;
        Y += y;
    }
}

class Group : GraphicPrimitive
{
    private List<GraphicPrimitive> Primitives = new List<GraphicPrimitive>();

    public void AddPrimitive(GraphicPrimitive primitive)
    {
        Primitives.Add(primitive);
    }

    public override void Draw()
    {
        foreach (var primitive in Primitives)
        {
            primitive.Draw();
        }
    }

    public override void Move(int x, int y)
    {
        X += x;
        Y += y;

        foreach (var primitive in Primitives)
        {
            primitive.Move(x, y);
        }
    }
}

class GraphicsEditor
{
    private List<GraphicPrimitive> Primitives = new List<GraphicPrimitive>();

    public void AddPrimitive(GraphicPrimitive primitive)
    {
        Primitives.Add(primitive);
    }

    public void DrawAll()
    {
        foreach (var primitive in Primitives)
        {
            primitive.Draw();
        }
    }

    public void MoveAll(int x, int y)
    {
        foreach (var primitive in Primitives)
        {
            primitive.Move(x, y);
        }
    }
}

class Program
{
    static void Main()
    {
        GraphicsEditor editor = new GraphicsEditor();

        Circle circle = new Circle { X = 10, Y = 10, Radius = 5 };
        Rectangle rectangle = new Rectangle { X = 20, Y = 20, Width = 8, Height = 6 };
        Triangle triangle = new Triangle { X = 30, Y = 30 };
        Group group = new Group { X = 40, Y = 40 };

        group.AddPrimitive(circle);
        group.AddPrimitive(rectangle);
        group.AddPrimitive(triangle);

        editor.AddPrimitive(group);
        editor.AddPrimitive(new Circle { X = 50, Y = 50, Radius = 3 });

        editor.DrawAll();
        editor.MoveAll(5, 5);
        editor.DrawAll();
    }
}
